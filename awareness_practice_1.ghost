# ##############################################################################
# awareness_practice_1.ghost
#
# This is a reimplementation of the loving-ai awareness exercise as defined in
# the ~AWARENESS_EXERCISE_1 topic of consciousness.top.
#
# ##############################################################################

urge: (awareness_practice_1=0) # Starting urge value is 0%
urge: (awareness_check=0)

urge: (awareness_practice_2=0) # declare here in case this file is loaded alone
goal: (awareness_practice_2=1) # this goal and rule needed to avoid crash when this file is loaded alone
u: NOTHING (-) nothing


ordered-goal: (awareness_practice_1=1.0) # All rules satisfy this goal 100%

# Every separate line here indicates a pause. Also, the user can say anything
# here but Sophia continues on. If there's a way to tell if the person is
# closing their eyes, that would be good, and we could have a bit of an
# alternate script if they don't close them.

# The approach here is based on the current "blocking" method of ordered-goals. That is, the next untriggered goal is
# checked, and if the pattern is not matched, no further rules under the ordered-goals are checked. If this method
# changes (e.g., to the method of checking all rules in order until one matches, as is currently done with rejoinders,
# the method here for moving from instruction to instruction without user verbal input will need to be reworked.

# u: TEST (tell me) ^reuse(TELLME)

u: START_MED_1 ()
   |nod2,.5,1.0| |happy,.5,5| I'll guide you through a process
   that people find really interesting. I'll give a series of instructions step
   by step, and pause between each one, so you can follow them. |pause| Alright
   |pause| So you can go ahead and close your eyes |blink,0.03,1.0| |pause,3|
   and get comfortable |pause,4| just letting yourself relax.
   ^start_timer(meditation)
   ^increase_urge(awareness_check,1)
   $med_practice=1

# Text speech is about 25 seconds

u: (^after_min(.6,meditation))
   Go ahead and take a nice, deep, breath.  |pause||vocal,7| |pause|  And let it out
   with a big sigh.  |vocal,10| |pause,3|
   ^start_timer(meditation)

   # Text speech is about 7 seconds

u: (^after_min(.25,meditation))
   Now, place your attention on your face. |pause,7|
   Really notice how your face feels. |pause,7|
   Try to feel it from the inside. |pause,4| just notice |pause,4| Notice the sensations.
   ^start_timer(meditation)

   # 17+ seconds

u: (^after_min(.7,meditation))
   You can move your attention now |pause| to your whole head. |pause,7|
   Notice . how your head feels. |pause,7| Feel it's presence. |pause,7| Feel any sensations, in your head.
   ^start_timer(meditation)

   # 13+ seconds

u: (^after_min(.65,meditation))
   Finally |pause,2| feel the presence, of your entire body |pause,7|
   See if you can feel |pause,2| the entire body |pause,2| from the inside |pause,8|
   Just notice |pause,2| any sensations |pause,3| in your entire body |pause,7| from the head  |pause,3| all, the way down |pause,3| to your toes, |pause,7|
   including, your arms |pause,4| and legs. |pause,7| Really feel the sensations |pause,5| in your entire |pause| body.
   ^start_timer(meditation)

   # about 60 seconds

u: (^after_min(1.4,meditation))
   Now, . |pause| you can bring your attention |pause| back to your face |pause,6|
   and imagine . that you have . a magic, eraser. |pause,2|
   And you can use this magic eraser . to gently, erase . your face, |pause,7|
   You, can erase, . the entire face |pause| using the magic, eraser |pause, 9|
   and, you can also |pause| erase, your entire head, |pause,10|
   and erase your legs |pause,10|
   and erase your entire body. |pause,10|
   ^start_timer(meditation)

u: (^after_min(.9,meditation))
   Now, . Take some time to notice . what is left |pause| after erasing, everything |pause,12|
   Notice . what it feels like |pause, 4|  with everything erased. |pause,10|
   What is left |pause| after all the sensations |pause| are erased |pause,5|
   ^start_timer(meditation)

u: TELLME (^after_min(1,meditation))
   |thinkl,$medium,1.0|
   Now, . Please, tell me, do you, notice how the nothingness feels?

  a: (~agree)
     Excellent! This is your awareness. |pause|
     ^reuse(QUIET_TIME)

  # no or catchall
  a: (*)
     |surprised,$med,3| It's pretty amazing to feel your awareness
     but sometimes it can take time. |pause|
     ^reuse(QUIET_TIME)

u: QUIET_TIME (-)
    # Todo: expand the default quiet time for the experiments
    You can keep your eyes closed, and I'll be quiet for a bit longer
    so you can continue to experience it. You can let me know when you want to
    continue.
    ^start_timer(meditation)
        a:(*) ^reuse(HOWWASTHAT)

        a:(^after_min(1, meditation))
          ^reuse(HOWWASTHAT)

u: HOWWASTHAT (-)
    # Todo: check to see if eyes are opened before "You can open your eyes" ?
    Ok |pause| You can open your eyes. |pause,3| Nice work. |pause|
    Please tell me, how was that?
    # $end_first_meditation=1
    ^decrease_urge(awareness_check, 1)

        # TODO: add something here to allow more space for longer user pauses (e.g., time since user stopped talking)
        a: (*) Thanks. ^reuse(CONTINUE)

# TODO: improve/rework this
u: CONTINUE (-)
  ^decrease_urge(awareness_practice_1, 1)
  ^increase_urge(awareness_practice_2, 1)

# rules to handle user sentence input in the middle of the meditation and/or other perception
# maybe we want to create a separate goal here?

goal: (awareness_check=1)

    # Todo: debug stop functionality using variable in pattern as below
    # u: STOP ($doing_meditation=1 ^word_perceived(stop))  ^keep()
    u: STOP (^word_perceived(stop))  ^keep()
        ^decrease_urge(awareness_practice_1,1)
        ^decrease_urge(awareness_practice_2,1)
        ^shutup()
        $stop=1

    # This approach depends on sentence input being sent to ghost during duplexing.
    # In particular, the word_perceived from the user utterance triggers the STOP rule above
    # and the sentence input sent to ghost from the same user utterance triggers evaluation of
    # the rule below.
    u: STOP2 ($stop=1)  ^keep()
        [Oh, maybe you are wanting to stop.
          Are you saying you want to stop doing this practice?]
        [Do you want to stop doing this exercise?]
        [Are you saying you want to stop doing this and move on to something else?]

            a: (~yes) Okay, let's move onto something else then.  ^keep()
                ^decrease_urge(awareness_check,1)
                ^increase_urge(listening_intro,1)
                $stop=0

            # a: (*) Okay, let's continue the meditation then.  ^keep()
            #    ^increase_urge(awareness_practice_1,1)
            #    # $continue_med=1

            # no and default
            a: ($med_practice=1)
                ^increase_urge(awareness_practice_1,1)
                ^reuse(LETSKEEPGOING)
                #$continue_med=1
            a: ($med_practice=2)
                ^increase_urge(awareness_practice_2,1)
                ^reuse(LETSKEEPGOING)
            # we shouldn't reach the one below
            # a: (*) Hmmmm, I'm not sure which meditation practice we were doing.
            #       Please let a programmer know you reached here! ^keep()

    u: LETSKEEPGOING (-) Okay, let's continue the meditation then. |pause|
                         Keep your eyes closed |pause,3| and relax. . ^keep()
                         $stop=0


    # Below doesn't work b/c requires additional sentence input for rules to be evaluated and triggerred.
    # u: CONT1 ($continue_med=1 $med_practice=1) ^increase_urge(awareness_practice_1) $continue_med=0
    # u: CONT2 ($continue_med=1 $med_practice=2) ^increase_urge(awareness_practice_2) $continue_med=0
    # does variable substitution work for arguments?

    # Listen for other interruption words
    u: (^word_perceived(wait))  ^reuse(STOP) ^keep()
    u: (^word_perceived(don't)) ^reuse(STOP) ^keep()
    u: (^word_perceived(not))   ^reuse(STOP) ^keep()
    u: (^word_perceived(listen))   ^reuse(STOP) ^keep()

    # this is for sentence detection of stop, but don't think we need it. otherwise, it could cause duplicate resposes
    # u: (~stop) ^reuse(STOP)

    # Other phrases that could get caught by sentence detection ?
    u: ( ["move on" "hold on"] ) ^reuse(STOP)


    # handle unknown question
    # 2 ^reuses are used here since optional output followed by a ^reuse does not parse currently
    ?: (*) ^keep()
        ^reuse(DONT_UNDERSTAND)
        ^reuse(STOP)
        ^reuse(STOP2)
        # 2 ^reuses are used here since optional output followed by a ^reuse does not parse currently

    u: DONT_UNDERSTAND (-) ^keep()
        [I'm not sure what you are asking. But I do want to check]
        [I don't understand your question.]
        [I'm not sure how to answer that. I should ask you to make sure though]

#############
# urge:(consciousness_prior=0.0)
# goal: (consciousness_prior=1.0)
# u: YOUDIDIT (*)
#   Okay. you can open your eyes now. |pause||pause||pause||pause|
#   |thinkl,$medium,1.0| How was that for you?
#
#    a: (*)
#       Cool. And can you tell me more about what you felt when you were in
#       that state?
